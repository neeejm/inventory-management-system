plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id "io.freefair.lombok" version "6.5.0.3"
	id "org.sonarqube" version "3.4.0.2513"
	id "co.uzzu.dotenv.gradle" version "2.0.0"
	id 'jacoco'
}

group = 'com.neeejm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring boot 
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	// implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// database
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	// others
	implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.53'
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	// implementation 'com.querydsl:querydsl-jpa:5.0.0'
	// annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
  properties {
    property "sonar.projectKey", "neeejm_inventory-management-system"
    property "sonar.organization", "neeejm"
    property "sonar.login", env.SONAR_TOKEN.value
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.sources", "src/main"
    property "sonar.test", "src/test"
    property "sonar.java.binaries", "build/classes"
    property "sonar.java.libraries", "build/libs"
    property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
  }
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

task unitTest(type: Test) {
	exclude '**/*IntegrationTests*'
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

task integrationTest(type: Test) {
	include '**/*IntegrationTests*'
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}